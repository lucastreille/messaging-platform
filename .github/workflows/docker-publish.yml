name: CI/CD Pipeline

on:
  push:
    branches: [ master-wt ]
  pull_request:
    branches: [ master-wt ]

env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/nestjs-messaging-app
  DOCKER_TAG: ${{ github.sha }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm run test

    - name: Build application
      run: npm run build

  docker-build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t ${{ env.DOCKER_IMAGE }}:latest .
        docker tag ${{ env.DOCKER_IMAGE }}:latest ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}

    - name: Push Docker images
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 15
        max_attempts: 3
        retry_on: error
        command: |
          docker push ${{ env.DOCKER_IMAGE }}:latest
          docker push ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}

    - name: Clean up local images
      run: |
        docker rmi ${{ env.DOCKER_IMAGE }}:latest || true
        docker rmi ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }} || true

  deploy-to-render:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master-wt' && github.event_name == 'push'
    
    steps:
    - name: Deploy to Render
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 10
        max_attempts: 3
        retry_on: error
        command: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -d '{"clearCache": false}' \
            https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys

    - name: Wait for deployment
      run: |
        echo "Deployment triggered successfully"
        echo "Check your Render dashboard for deployment status"
